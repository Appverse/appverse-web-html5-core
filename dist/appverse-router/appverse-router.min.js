/*! appverse-web-html5-core - v0.7.5 - */
!function(){"use strict";angular.module("appverse.router",["ui.router","appverse.configuration.default"])}(),function(){"use strict";angular.module("appverse.router").config(["$urlRouterProvider","ROUTER_CONFIG",function(a,b){b.loadStatesEnabled&&a.deferIntercept()}])}(),function(){"use strict";angular.module("appverse.router").run(["$log","$rootScope","$state","$stateParams","ROUTER_CONFIG","avStates",function(a,b,c,d,e,f){a.debug("appverse.router run"),b.$state=c,b.$stateParams=d,e.autoLoadStates&&f.loadStates()}])}(),function(){"use strict";angular.module("appverse.router").provider("avStates",["$stateProvider",function(a){this.$get=["$log","$http","ROUTER_CONFIG","REST_CONFIG","$urlRouter",function(b,c,d,e,f){return{loadStates:function(g){if(g)b.debug("Promise detected. It will be used to load states.");else{var h=d.statesUrl;d.prependBaseUrl&&(h=e.BaseUrl+h),d.appendRequestSuffix&&(h+=e.RequestSuffix),b.debug("Getting states from "+h),g=c.get(h)}g.then(function(c){b.debug("States promise response",c),""!==d.responsePath&&angular.forEach(d.responsePath.split("."),function(a){c=c[a]}),angular.forEach(c,function(c){b.debug("Adding state:",c.name),a.state(c.name,c.config)}),f.listen(),f.sync()})}}}]}])}();
//# sourceMappingURL=appverse-router.min.js.map