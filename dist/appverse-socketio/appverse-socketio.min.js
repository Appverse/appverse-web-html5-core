/*! appverse-web-html5-core - v0.8.0 - */
!function(){"use strict";angular.module("appverse.socketio",["appverse.configuration"])}(),function(){"use strict";angular.module("appverse.socketio").factory("SocketFactory",["$rootScope","Socket",function(a,b){var c={};return c.listen=function(c,d){b.on(c,function(){var c=arguments;a.$apply(function(){d.apply(b,c)})})},c.sendMessage=function(c,d,e){b.emit(c,d,function(){var c=arguments;a.$apply(function(){e&&e.apply(b,c)})})},c.unsubscribeCommunication=function(a){b.off(a())},c}])}(),function(){"use strict";angular.module("appverse.socketio").provider("Socket",function(){var a,b=angular.injector(["appverse.configuration.default"]).get("SERVERPUSH_CONFIG"),c="socket:";this.$get=["$rootScope","$timeout",function(d,e){var f;(a||window.io)&&(f=a||io.connect(b.BaseUrl,{resource:b.Resource,"connect timeout":b.ConnectTimeout,"try multiple transports":b.TryMultipleTransports,reconnect:b.Reconnect,"reconnection delay":b.ReconnectionDelay,"reconnection limit":b.ReconnectionLimit,"max reconnection attempts":b.MaxReconnectionAttempts,"sync disconnect on unload":b.SyncDisconnectOnUnload,"auto connect":b.AutoConnect,"flash policy port":b.FlashPolicyPort,"force new connection":b.ForceNewConnection}));var g=function(a){return function(){var b=arguments;e(function(){a.apply(f,b)},0)}},h=function(a,b){f.on(a,g(b))},i=function(){f.removeAllListeners()},j={on:h,addListener:h,off:i,emit:function(a,b,c){c?f.emit(a,b,g(c)):f.emit(a,b)},forward:function(a,b){a instanceof Array==!1&&(a=[a]),b||(b=d),angular.forEach(a,function(a){var d=c+a,e=g(function(a){b.$broadcast(d,a)});b.$on("$destroy",function(){f.removeListener(a,e)}),f.on(a,e)})}};return j}],this.prefix=function(a){c=a},this.ioSocket=function(b){a=b}})}();
//# sourceMappingURL=appverse-socketio.min.js.map